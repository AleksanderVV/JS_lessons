{"ast":null,"code":"var _jsxFileName = \"/Volumes/General/JS_lessons/JS+React_lessons/React/marvel/src/components/randomChar/RandomChar.js\";\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport { Component } from 'react';\nimport Spinner from '../spiner/Spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RandomChar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      char: {},\n      loading: true,\n      error: false\n    };\n    this.marvelService = new MarvelService();\n\n    this.onCharLoaded = char => {\n      this.setState({\n        char,\n        loading: false\n      });\n    };\n\n    this.onCharLoading = () => {\n      this.setState({\n        loading: true\n      });\n    };\n\n    this.onError = () => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n    };\n\n    this.updateChar = () => {\n      const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n      this.onCharLoading();\n      this.marvelService.getCharacter(id).then(this.onCharLoaded).catch(this.onError);\n    };\n  }\n\n  componentDidMount() {\n    this.updateChar(); // this.timerId = setInterval(this.updateChar, 3000);\n  }\n\n  componentWillUnmount() {// clearInterval(this.timerId);\n  }\n\n  render() {\n    const {\n      char,\n      loading,\n      error\n    } = this.state;\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 34\n    }, this) : null;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 31\n    }, this) : null;\n    const content = !(loading || error) ? /*#__PURE__*/_jsxDEV(View, {\n      char: char\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 43\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar\",\n      children: [errorMessage, spinner, content, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"randomchar__static\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"randomchar__title\",\n          children: [\"Random character for today!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 46\n          }, this), \"Do you want to get to know him better?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"randomchar__title\",\n          children: \"Or choose another one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button button__main\",\n          onClick: this.updateChar,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"try it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: mjolnir,\n          alt: \"mjolnir\",\n          className: \"randomchar__decoration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst View = ({\n  char\n}) => {\n  const {\n    name,\n    description,\n    thumbnail,\n    homepage,\n    wiki\n  } = char;\n\n  const imageIncludes = /*#__PURE__*/_jsxDEV(\"img\", {\n    src: thumbnail,\n    alt: \"Random character\",\n    className: \"randomchar__img\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 25\n  }, this);\n\n  const imageNotIncludes = /*#__PURE__*/_jsxDEV(\"img\", {\n    src: thumbnail,\n    alt: \"Random character\",\n    className: \"randomchar__img-out\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 28\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"randomchar__block\",\n    children: [thumbnail.includes('image_not_available') ? imageNotIncludes : imageIncludes, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__descr\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"randomchar__btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: homepage,\n          className: \"button button__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"homepage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: wiki,\n          className: \"button button__secondary\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"Wiki\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_c = View;\nexport default RandomChar;\n\nvar _c;\n\n$RefreshReg$(_c, \"View\");","map":{"version":3,"sources":["/Volumes/General/JS_lessons/JS+React_lessons/React/marvel/src/components/randomChar/RandomChar.js"],"names":["mjolnir","Component","Spinner","ErrorMessage","MarvelService","RandomChar","state","char","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","id","Math","floor","random","getCharacter","then","catch","componentDidMount","componentWillUnmount","render","errorMessage","spinner","content","View","name","description","thumbnail","homepage","wiki","imageIncludes","imageNotIncludes","includes"],"mappings":"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","sourcesContent":["import './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport { Component } from 'react';\nimport Spinner from '../spiner/Spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport MarvelService from '../../services/MarvelService';\n\nclass RandomChar extends Component {\n\n  state = {\n    char: {},\n    loading: true,\n    error: false\n  }\n\n  marvelService = new MarvelService();\n\n  componentDidMount() {\n    this.updateChar();\n    // this.timerId = setInterval(this.updateChar, 3000);\n  }\n\n  componentWillUnmount() {\n    // clearInterval(this.timerId);\n  }\n\n  onCharLoaded = (char) => {\n    this.setState({char, loading: false})\n  }\n\n  onCharLoading = () => {\n    this.setState({\n      loading: true\n    })\n  }\n\n  onError = () => {\n    this.setState({\n      loading: false,\n      error: true\n    })\n  }\n\n  updateChar = () => {\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    this.onCharLoading();\n    this.marvelService\n      .getCharacter(id)\n      .then(this.onCharLoaded)\n      .catch(this.onError);\n  }\n\n  render() {\n    const {char, loading, error} = this.state;\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error) ? <View char={char}/> : null;\n\n    return (\n      <div className=\"randomchar\">\n          {errorMessage}\n          {spinner}\n          {content}\n          <div className=\"randomchar__static\">\n              <p className=\"randomchar__title\">\n                  Random character for today!<br/>\n                  Do you want to get to know him better?\n              </p>\n              <p className=\"randomchar__title\">\n                  Or choose another one\n              </p>\n              <button className=\"button button__main\" onClick={this.updateChar}>\n                  <div className=\"inner\">try it</div>\n              </button>\n              <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n          </div>\n      </div>\n  )\n  }\n}\n\nconst View = ({char}) => {\n  const {name,description,thumbnail,homepage,wiki} = char;\n  const imageIncludes = <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>;\n  const imageNotIncludes = <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img-out\"/>;\n\n  return (\n    <div className=\"randomchar__block\">\n    {thumbnail.includes('image_not_available') ? imageNotIncludes : imageIncludes}\n    <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{description}</p>\n        <div className=\"randomchar__btns\">\n            <a href={homepage} className=\"button button__main\">\n                <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n                <div className=\"inner\">Wiki</div>\n            </a>\n        </div>\n    </div>\n</div>\n  )\n}\n\nexport default RandomChar;"]},"metadata":{},"sourceType":"module"}