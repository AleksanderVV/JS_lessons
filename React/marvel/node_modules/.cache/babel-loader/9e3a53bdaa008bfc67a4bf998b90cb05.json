{"ast":null,"code":"var _jsxFileName = \"/Volumes/General/JS_lessons/JS+React_lessons/React/marvel/src/components/charInfo/CharInfo.js\";\nimport { Component } from 'react';\nimport Spinner from '../spiner/Spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport MarvelService from '../../services/MarvelService';\nimport './charInfo.scss';\nimport thor from '../../resources/img/thor.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CharInfo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      char: null,\n      loading: false,\n      error: false\n    };\n    this.marvelService = new MarvelService();\n\n    this.updateChar = () => {\n      const {\n        charId\n      } = this.props;\n\n      if (!charId) {\n        return;\n      }\n\n      this.onCharLoading();\n      this.marvelService.getCharacter(charId).then(this.onCharLoaded).catch(this.onError);\n    };\n\n    this.onCharLoaded = char => {\n      this.setState({\n        char,\n        loading: false\n      });\n    };\n\n    this.onCharLoading = () => {\n      this.setState({\n        loading: true\n      });\n    };\n\n    this.onError = () => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updateChar();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.charId !== prevProps.charId) {\n      this.updateChar();\n    }\n  }\n\n  render() {\n    const {\n      char,\n      loading,\n      error\n    } = this.state;\n    const skeleton = char || loading || error ? null : /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 56\n    }, this);\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 34\n    }, this) : null;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 31\n    }, this) : null;\n    const content = !(loading || error || !char) ? /*#__PURE__*/_jsxDEV(View, {\n      char: char\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 52\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__info\",\n      children: [skeleton, errorMessage, spinner, content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst View = ({\n  char\n}) => {\n  const {\n    name,\n    description,\n    thumbnail,\n    homepage,\n    wiki,\n    comics\n  } = char;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__basics\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: thumbnail,\n        alt: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__info-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__btns\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: homepage,\n            className: \"button button__main\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"homepage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: wiki,\n            className: \"button button__secondary\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inner\",\n              children: \"Wiki\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__descr\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"char__comics\",\n      children: \"Comics:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__comics-list\",\n      children: comics.map((item, i) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"char__comics-item\",\n          children: item.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_c = View;\nexport default CharInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"View\");","map":{"version":3,"sources":["/Volumes/General/JS_lessons/JS+React_lessons/React/marvel/src/components/charInfo/CharInfo.js"],"names":["Component","Spinner","ErrorMessage","Skeleton","MarvelService","thor","CharInfo","state","char","loading","error","marvelService","updateChar","charId","props","onCharLoading","getCharacter","then","onCharLoaded","catch","onError","setState","componentDidMount","componentDidUpdate","prevProps","prevState","render","skeleton","errorMessage","spinner","content","View","name","description","thumbnail","homepage","wiki","comics","map","item","i"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport Spinner from '../spiner/Spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport Skeleton from '../skeleton/Skeleton'\nimport MarvelService from '../../services/MarvelService';\nimport './charInfo.scss';\nimport thor from '../../resources/img/thor.jpeg';\n\nclass CharInfo extends Component  {\n  state = {\n    char: null,\n    loading: false,\n    error: false\n  }\n\n  marvelService = new MarvelService();\n\n  componentDidMount() {\n    this.updateChar();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.charId !== prevProps.charId) {this.updateChar()}\n  }\n\n  updateChar = () => {\n    const {charId} = this.props;\n    if (!charId) {\n      return;\n    }\n\n    this.onCharLoading();\n    this.marvelService\n      .getCharacter(charId)\n      .then(this.onCharLoaded)\n      .catch(this.onError)\n  }\n\n  onCharLoaded = (char) => {\n    this.setState({char, loading: false})\n  }\n\n  onCharLoading = () => {\n    this.setState({\n      loading: true\n    })\n  }\n\n  onError = () => {\n    this.setState({\n      loading: false,\n      error: true\n    })\n  }\n\n  render() {\n    const {char,loading,error} = this.state;\n\n    const skeleton = char || loading || error ? null : <Skeleton/>; \n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n      <div className=\"char__info\">\n        {skeleton}\n        {errorMessage}\n        {spinner}\n        {content}\n      </div>\n  )\n  }\n}\n\nconst View = ({char}) => {\n  const {name,description,thumbnail,homepage,wiki,comics} = char;\n\n  return (\n    <>\n      <div className=\"char__basics\">\n          <img src={thumbnail} alt={name}/>\n          <div>\n              <div className=\"char__info-name\">{name}</div>\n              <div className=\"char__btns\">\n                  <a href={homepage} className=\"button button__main\">\n                      <div className=\"inner\">homepage</div>\n                  </a>\n                  <a href={wiki} className=\"button button__secondary\">\n                      <div className=\"inner\">Wiki</div>\n                  </a>\n              </div>\n          </div>\n          </div>\n          <div className=\"char__descr\">\n            {description}\n          </div>\n          <div className=\"char__comics\">Comics:</div>\n          <ul className=\"char__comics-list\">\n            {comics.map((item, i) => {\n              return (\n                <li key={i} className=\"char__comics-item\">\n                  {item.name}\n              </li>\n              )\n            })}\n          </ul>\n    </>\n  )\n}\n\nexport default CharInfo;"]},"metadata":{},"sourceType":"module"}